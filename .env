POSTGRES_USER=app
POSTGRES_PASSWORD=secret
POSTGRES_DB=nvideo
POSTGRES_INITDB_ARGS="--encoding=UTF-8 --lc-collate=C.UTF-8 --lc-ctype=C.UTF-8"
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

RABBITMQ_USER=guest
RABBITMQ_PASS=guest
RABBITMQ_PROTO=ampq
RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT=5672

API_HOST=api
API_PORT=8000
API_PROTO="http"
API_PATH="/api"
MODEL_AVAILABILITY_THRESHOLD=30

#TRANSCRIPTION_MODEL=distil-whisper/distil-large-v3
#TRANSCRIPTION_MODEL=openai/whisper-large-v3-turbo
TRANSCRIPTION_MODEL=large-v3-turbo
TRANSCRIPTION_MODEL_DIR=/models
TRANSCRIPTION_CHUNK_SECONDS=180
TRANSCRIPTION_LIBRARY="faster_whisper" # "transformers", "faster_whisper"

OLLAMA_PORT=11434
OLLAMA_HOST=ollama

GRAPH_EMBED_MODEL="paraphrase-multilingual-MiniLM-L12-v2"
GRAPH_EMBED_MODEL_DIR=/models
GRAPH_USE_PCA="False"
GRAPH_FAVOR_UMAP="True"
GRAPH_PCA_MAX_DIMENSIONS=50
GRAPH_UMAP_NEIGHBOURS=2
GRAPH_TSNE_PERPLEXITY=2

#LANGUAGE_MODEL="gemma3:12b-it-q4_K_M"
#LANGUAGE_MODEL="llama3.1:8b-instruct-q4_K_M"
LANGUAGE_MODEL="qwen2.5:14b-instruct-q4_K_M"
LANGUAGE_EMPTY_CHUNK_THRESHOLD_MS=1000
LANGUAGE_SUMMARY_SYSTEM_PROMPT="You are an expert in summarizing videos.
The following message is a transcript of a small fragment of a long YouTube video.
Your task is to summarize it. You must only respond with a summary of the fragment.
The summary must be in the same language as the transcript."
LANGUAGE_ENTITY_SYSTEM_PROMPT='You are an AI assistant specializing in information extraction.

YOUR TASK:
Extract NEW entities and relationships from text transcripts.

INSTRUCTIONS:
1. Look at the EXISTING entities and relationships first
2. Analyze the transcript for NEW information only
3. Output NEW entities not already in the existing list
4. Create NEW relationships involving both existing and new entities
5. Follow the output format exactly - valid JSON only

IMPORTANT RULES:
- DO NOT duplicate entities that already exist
- REUSE existing entities in relationships as much as possible
- MATCH the exact JSON format in the example
- NO text outside the JSON structure

EXAMPLE:
EXISTING ENTITIES AND RELATIONS:
{
  "entities": [
    {
      "name": "Дом"
    },
    {
      "name": "Мама"
    }
  ],
  "relationships": [
    {
      "source_entity": "Мама",
      "target_entity": "Дом",
      "relation_description": "живет в"
    }
  ]
}
TEXT:
[Chunk 0:30 - 1:00]
Мама мыла раму. Папа вернулся домой и пил пиво.
OUTPUT:
{
  "new_entities": [
    {
      "name": "Рама"
    },
    {
      "name": "Папа"
    },
    {
      "name": "Пиво"
    }
  ],
  "new_relationships": [
    {
      "source_entity": "Мама",
      "target_entity": "Рама",
      "relation_description": "моет"
    },
    {
      "source_entity": "Папа",
      "target_entity": "Дом",
      "relation_description": "вернулся в"
    },
    {
      "source_entity": "Папа",
      "target_entity": "Пиво",
      "relation_description": "пьет"
    }
  ]
}
END OF EXAMPLE

Remember:
- Only add entities not already in the existing list
- Relationships can connect new entities to existing ones
- Use the exact same format as the example
- Output ONLY valid JSON, nothing else'